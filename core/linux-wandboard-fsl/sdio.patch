From: Edward
Date: Wed, 20 Nov 2013 18:00:50 +0800
Subject: [PATCH 1/1] USI BCM4329 : fix build break for USI BCM4329 drivers.

---
drivers/mmc/core/sdio.c | 74 +++++++++++++++++++++++++++++++++++++++++++++++++
include/net/cfg80211.h  | 17 +++++++++++-
net/wireless/nl80211.c  |  4 +++
3 files changed, 94 insertions(+), 1 deletion(-)

diff --git a/drivers/mmc/core/sdio.c b/drivers/mmc/core/sdio.c
index cc3736b..3512bdd 100644
--- a/drivers/mmc/core/sdio.c
+++ b/drivers/mmc/core/sdio.c
@@ -882,3 +882,77 @@ err:
    return err;
 }

+int sdio_reset_comm(struct mmc_card *card)
+{
+   struct mmc_host *host = card->host;
+   u32 ocr;
+   int err;
+
+   printk("%s():\n", __func__);
+   mmc_claim_host(host);
+
+   mmc_go_idle(host);
+
+   mmc_set_clock(host, host->f_min);
+
+   err = mmc_send_io_op_cond(host, 0, &ocr);
+   if (err)
+      goto err;
+
+   host->ocr = mmc_select_voltage(host, ocr);
+   if (!host->ocr) {
+      err = -EINVAL;
+      goto err;
+   }
+
+   err = mmc_send_io_op_cond(host, host->ocr, &ocr);
+   if (err)
+      goto err;
+
+   if (mmc_host_is_spi(host)) {
+      err = mmc_spi_set_crc(host, use_spi_crc);
+      if (err)
+         goto err;
+   }
+
+   if (!mmc_host_is_spi(host)) {
+      err = mmc_send_relative_addr(host, &card->rca);
+      if (err)
+         goto err;
+      mmc_set_bus_mode(host, MMC_BUSMODE_PUSHPULL);
+   }
+   if (!mmc_host_is_spi(host)) {
+      err = mmc_select_card(card);
+      if (err)
+         goto err;
+   }
+
+   /*
+    * Switch to high-speed (if supported).
+    */
+   err = sdio_enable_hs(card);
+   if (err > 0)
+      mmc_sd_go_highspeed(card);
+   else if (err)
+      goto err;
+
+   /*
+    * Change to the card's maximum speed.
+    */
+   mmc_set_clock(host, mmc_sdio_get_max_clock(card));
+
+   err = sdio_enable_4bit_bus(card);
+   if (err > 0)
+      mmc_set_bus_width(host, MMC_BUS_WIDTH_4);
+   else if (err)
+      goto err;
+
+   mmc_release_host(host);
+   return 0;
+err:
+   printk("%s: Error resetting SDIO communications (%d)\n",
+          mmc_hostname(host), err);
+   mmc_release_host(host);
+   return err;
+}
+EXPORT_SYMBOL(sdio_reset_comm);
diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index 396e8fc..d048ed5 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -426,6 +426,7 @@ struct station_parameters {
  * @STATION_INFO_RX_BITRATE: @rxrate fields are filled
  * @STATION_INFO_BSS_PARAM: @bss_param filled
  * @STATION_INFO_CONNECTED_TIME: @connected_time filled
+ * @STATION_INFO_ASSOC_REQ_IES: @assoc_req_ies filled
  */
 enum station_info_flags {
   STATION_INFO_INACTIVE_TIME   = 1<<0,
@@ -444,7 +445,8 @@ enum station_info_flags {
   STATION_INFO_SIGNAL_AVG      = 1<<13,
   STATION_INFO_RX_BITRATE      = 1<<14,
   STATION_INFO_BSS_PARAM          = 1<<15,
-   STATION_INFO_CONNECTED_TIME   = 1<<16
+   STATION_INFO_CONNECTED_TIME   = 1<<16,
+   STATION_INFO_ASSOC_REQ_IES   = 1<<17
 };

 /**
@@ -536,6 +538,11 @@ struct sta_bss_parameters {
  *   This number should increase every time the list of stations
  *   changes, i.e. when a station is added or removed, so that
  *   userspace can tell whether it got a consistent snapshot.
+ * @assoc_req_ies: IEs from (Re)Association Request.
+ *   This is used only when in AP mode with drivers that do not use
+ *   user space MLME/SME implementation. The information is provided for
+ *   the cfg80211_new_sta() calls to notify user space of the IEs.
+ * @assoc_req_ies_len: Length of assoc_req_ies buffer in octets.
  */
 struct station_info {
   u32 filled;
@@ -558,6 +565,14 @@ struct station_info {
   struct sta_bss_parameters bss_param;

   int generation;
+
+   const u8 *assoc_req_ies;
+   size_t assoc_req_ies_len;
+
+   /*
+    * Note: Add a new enum station_info_flags value for each new field and
+    * use it to check which fields are initialized.
+    */
 };

 /**
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index f310a0d..df6132b 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -2213,6 +2213,10 @@ static int nl80211_send_station(struct sk_buff *msg, u32 pid, u32 seq,
   }
   nla_nest_end(msg, sinfoattr);

+   if (sinfo->filled & STATION_INFO_ASSOC_REQ_IES)
+      NLA_PUT(msg, NL80211_ATTR_IE, sinfo->assoc_req_ies_len,
+         sinfo->assoc_req_ies);
+
   return genlmsg_end(msg, hdr);

  nla_put_failure:
-- 
1.8.0

